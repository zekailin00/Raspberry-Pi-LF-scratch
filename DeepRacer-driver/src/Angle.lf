target Cpp {
    cmake-include: "composition.cmake"
};

public preamble {=
    #include <stdio.h>
    #include <stdlib.h>
    #include <iostream>

    #include <pigpio.h>
=}

reactor AngleDriver (bias:int(1400), sensitivity:int(400), pin:int(4)) {
    input norm_angle:float;
    state pwm_angle:int(bias);

    reaction(startup) {=
       while (gpioInitialise() < 0)
            std::cout << "GPIO initialization failed!" << std::endl;
    =}

    reaction(norm_angle) {=
        pwm_angle = bias + *norm_angle.get() * sensitivity;
        gpioServo(pin, pwm_angle);
        //std::cout << "Set PWM to " << pwm_angle << std::endl;
    =}

    reaction(shutdown) {=
	gpioTerminate();
	std::cout << "GPIO shutdown" << std::endl;
    =}
}

main reactor {
    timer t(0, 100 ms)
    servo = new AngleDriver();
    state angle:float

    reaction(t) -> servo.norm_angle {=
        servo.norm_angle.set(0.0f);
    =}
}
